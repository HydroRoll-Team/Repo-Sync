name: Sync Forks

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间 00:00 执行
    
  push:

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Git user
        run: |
          git config --global user.name "HsiangNianian"
          git config --global user.email "HsiangNianian@outlook.com"

      - name: Sync Forks
        env:
          ACTION_SECRET: ${{ secrets.ACTION_SECRET }}
        run: |
          #!/usr/bin/env bash

          set -e

          org_name=retrofor
          fork_repos="OlivOS Dice virtual-event-starter-kit1"

          for repo in $fork_repos; do
            upstream_url=$(curl -s https://api.github.com/repos/$org_name/$repo | jq -r '.parent.clone_url')
            git clone --depth=1 $upstream_url /tmp/$repo
            cd /tmp/$repo
            git remote add upstream $upstream_url
            git fetch upstream

            for branch in $(git branch -r | grep upstream); do
              local_branch=${branch#upstream/}
              git checkout $local_branch || git checkout -b $local_branch
              git merge --no-edit $branch
              git push origin $local_branch || true

              # 定义Issue标题和内容
              issue_title="Sync Status for $org_name/$repo"
              issue_body=""

              # 同步过程中发生错误时捕获错误并记录同步失败信息
              if [ $? -ne 0 ]; then
                issue_body+="Failed to sync $branch\n"
              else
                issue_body+="Successfully synced $branch\n"
              fi

              # 在指定的仓库中创建Issue
              curl --location --request POST "https://api.github.com/repos/$org_name/$repo/issues" \
              --header "Authorization: Bearer $ACTION_SECRET" \
              --header "Content-Type: application/json" \
              --data-raw "{
                  \"title\": \"$issue_title\",
                  \"body\": \"$issue_body\"
              }"
            done

            cd -
          done

